<div class="container">
  <h1><%= @line.route_long_name %> </h1>

  <div class="row" id="all_schedule">
    <div class="col-md-12">
      <% dirnb = 1 %>
      <% @stations.each do |dir, stations| %>
        <div class="col-md-6">
          <h3><%= dir %></h3>
          <% stations["bustime_response"]["stop"].each do |station| %>
            <div class="row">
              <div class="col-md-offset-1">
                <a href="#" onclick="ShowSchedule(<%= dirnb.to_s + station["stpid"] %>)">
                  <h5><%= station["stpnm"] %></h5>
                </a>
              </div>
              <div class="col-md-10">
                  <div class="panel panel-default hidden_div" id="<%= dirnb.to_s + station["stpid"] %>">
                    <div class="panel-body">
                      <i class="fa fa-heart favorite_box fa-lg" onclick="addFavorite(<%= dirnb.to_s + station["stpid"] %>, this)"></i>
                      <i class="fa fa-times close_box fa-lg" onclick="ShowSchedule(<%= dirnb.to_s + station["stpid"] %>)"></i>
                      <i class="fa fa-refresh refresh_box fa-lg" onclick="AjaxFetch(<%= dirnb.to_s + station["stpid"] %>)"></i>

                      <div class="panel-header" id="header_<%= dirnb.to_s + station["stpid"] %>"><%= station["stpnm"] %></div>
                      <div class="col-md-offset-1">
                        <div id="destination_<%= dirnb.to_s + station["stpid"] %>"></div>
                      </div>
                    </div>
                  </div>
              </div>
            </div>
          <% end %>
        </div>
        <% dirnb = dirnb + 1 %>
      <% end %>
    </div>
  </div>


<script>

  function ShowSchedule(stpid){

    //RETRIEVE DATA
    div_to_show = document.getElementById(stpid);

    //WE SEARCH ONLY IF OPEN
    if (div_to_show.getAttribute("class","panel panel-default hidden_div")){

      // we go fetch the data
      AjaxFetch(stpid);

    }
    toggleClass(div_to_show,"hidden_div");

  }


  //FUNCTION TO ADD AS FAVORITE THE SPECIFIC ROUTE
  function addFavorite(shedule, favorite){
    //RETRIEVE DATA

    toggleClass(favorite,"added_favorite");
  }

  //FUNCTION TO TOGGLE CLASS WITHOUT USING JQUERY
  function toggleClass(element, className){
    if (!element || !className){
        return;
    }
    var classString = element.className, nameIndex = classString.indexOf(className);
    if (nameIndex == -1) {
        classString += ' ' + className;
    }
    else {
        classString = classString.substr(0, nameIndex) + classString.substr(nameIndex+className.length);
    }
    element.className = classString;
  }


  //FUNCTION TO DELETE CONTENT OF THE DIV BEFORE RETRIEVING DATA
  function deleteContent(stpid) {
    var divtoclear = new Array() ;

    divtoclear[0] = document.getElementById("destination_" + stpid);
    divtoclear[1] = document.getElementById("header_" + stpid);

    for (i=0;i<divtoclear.length;i++){
      while (divtoclear[i].firstChild) {
        divtoclear[i].removeChild(divtoclear[i].firstChild);
      }
    }

  }

  //FUNCTION TO RETRIEVE THE DATA
  function AjaxFetch(stpid) {

    div_header = document.getElementById("header_" + stpid);
    destination_div = document.getElementById("destination_" + stpid);

    //we first delete what is currently in the div
    deleteContent(stpid);
    stopid = stpid.toString().substring(1);

    $.ajax({
          url: "/../bus/retrieve_data",
          cache: false,
          data: {stpid : stopid},
          success: function(data){
            var list_of_results = data["bustime_response"]["prd"];
            var bus = new Array();
            var h6 = new Array ();
            var span = new Array();


            //IF NO SERVICE SCHEDULED
            if (!list_of_results){
                  text = data["bustime_response"]["error"]["msg"] + " for that stop"
                  h6 = document.createElement("h6");
                  h6.appendChild(document.createTextNode(text));
                  destination_div.appendChild(h6);

            } else if (!list_of_results[0]) {
              //IF there is only one element, there is an error because list_of_Results is not a hash
              // We make the same computation as down but for just one element.
                  bus = list_of_results;
                  var pattern = /(\d{4})(\d{2})(\d{2})/;
                  arrival_time = bus["prdtm"].replace(" ","T").replace(pattern,'$1-$2-$3');
                  departure_time = bus["tmstmp"].replace(" ","T").replace(pattern,'$1-$2-$3');

                  number_of_seconds = new Date(arrival_time) - new Date(departure_time);
                  number_of_minutes = number_of_seconds / (60*1000);

                  console.log("minutes:" + number_of_minutes);
                  console.log("arrival time:" + new Date(arrival_time));
                  console.log("search time:" + new Date(departure_time));

                  bus_nb = "bus #" + bus["vid"] + " (to " + bus["des"] + ") - ";
                  time_to_bus = number_of_minutes + " minutes";
                  h6 = document.createElement("h6");
                  span = document.createElement("span");

                  h6.appendChild(document.createTextNode(bus_nb));
                  h6.setAttribute("class","bus_results");

                  span.appendChild(document.createTextNode(time_to_bus));
                  span.setAttribute("class","time_result");

                  h6.appendChild(span);

                  //Then add the result to the DOM
                  destination_div.appendChild(h6);

            } else {

              for (i=0; i<list_of_results.length; i++) {
                bus[i] = list_of_results[i];

                  //Then compute the result
                  var pattern = /(\d{4})(\d{2})(\d{2})/;
                  arrival_time = bus[i]["prdtm"].replace(" ","T").replace(pattern,'$1-$2-$3');
                  departure_time = bus[i]["tmstmp"].replace(" ","T").replace(pattern,'$1-$2-$3');

                  number_of_seconds = new Date(arrival_time) - new Date(departure_time);
                  number_of_minutes = number_of_seconds / (60*1000);

                  console.log("minutes:" + number_of_minutes);
                  console.log("arrival time:" + new Date(arrival_time));
                  console.log("search time:" + new Date(departure_time));

                  bus_nb = "bus #" + bus[i]["vid"] + " (to " + bus[i]["des"] + ") - ";
                  time_to_bus = number_of_minutes + " minutes";
                  h6[i] = document.createElement("h6");
                  span[i] = document.createElement("span");

                  h6[i].appendChild(document.createTextNode(bus_nb));
                  h6[i].setAttribute("class","bus_results");

                  span[i].appendChild(document.createTextNode(time_to_bus));
                  span[i].setAttribute("class","time_result");

                  h6[i].appendChild(span[i]);

                  //Then add the result to the DOM
                  destination_div.appendChild(h6[i]);
              }
            }
          }
        });
      }

      $("#all_schedule").on('click', 'a', false);
</script>


