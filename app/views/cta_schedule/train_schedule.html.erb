<div class="container">
  <h1><%= @line.route_long_name %> </h1>

  <div class="row">
          <div class="col-md-6">
            <% @stations.each do |station| %>
            <div class="row">
              <div class="col-md-offset-1 col-md-11">
                <a href="#" onclick="ShowSchedule(<%= station.MAP_ID %>)">
                  <h5><%= station.STATION_NAME %></h5>
                </a>

                <div class="panel panel-default hidden_div" id="<%= station.MAP_ID %>">
                  <div class="panel-body">
                    <i class="fa fa-heart favorite_box fa-lg" onclick="addFavorite(<%= station.MAP_ID %>, this)"></i>
                    <i class="fa fa-times close_box fa-lg" onclick="ShowSchedule(<%= station.MAP_ID %>)"></i>
                    <i class="fa fa-refresh refresh_box fa-lg" onclick="AjaxFetch(<%= station.MAP_ID %>)"></i>

                    <div id="destination_1_<%= station.MAP_ID %>"></div>
                    <div id="destination_5_<%= station.MAP_ID %>"></div>
                  </div>
                </div>
              </div>
            </div>
            <% end %>
          </div>


<script>

  function ShowSchedule(MapId){

    //RETRIEVE DATA
    div_to_show = document.getElementById(MapId);

    //WE SEARCH ONLY IF OPEN
    if (div_to_show.getAttribute("class","panel panel-default hidden_div")){

      // we go fetch the data
      AjaxFetch(MapId);

    }
    toggleClass(div_to_show,"hidden_div");

  }


  //FUNCTION TO ADD AS FAVORITE THE SPECIFIC ROUTE
  function addFavorite(shedule, favorite){
    //RETRIEVE DATA

    toggleClass(favorite,"added_favorite");
  }

  //FUNCTION TO TOGGLE CLASS WITHOUT USING JQUERY
  function toggleClass(element, className){
    if (!element || !className){
        return;
    }
    var classString = element.className, nameIndex = classString.indexOf(className);
    if (nameIndex == -1) {
        classString += ' ' + className;
    }
    else {
        classString = classString.substr(0, nameIndex) + classString.substr(nameIndex+className.length);
    }
    element.className = classString;
  }


  //FUNCTION TO DELETE CONTENT OF THE DIV BEFORE RETRIEVING DATA
  function deleteContent(MapId) {
    destination_5_div = document.getElementById("destination_5_" + MapId);
    destination_1_div = document.getElementById("destination_1_" + MapId);

    while (destination_5_div.firstChild) {
      destination_5_div.removeChild(destination_5_div.firstChild);
    }
    while (destination_1_div.firstChild) {
      destination_1_div.removeChild(destination_1_div.firstChild);
    }
  }

  //FUNCTION TO RETRIEVE THE DATA
  function AjaxFetch(MapId) {

    destination_5_div = document.getElementById("destination_5_" + MapId);
    destination_1_div = document.getElementById("destination_1_" + MapId);

    //we first delete what is currently in the div
    deleteContent(MapId);

    $.ajax({
          url: "/../train/retrieve_data",
          cache: false,
          data: {mapid : MapId},
          success: function(data){
            var list_of_results = data["ctatt"]["eta"] ;
            var train = new Array();
            var h6 = new Array ();
            var span = new Array();
            direction_1 = 0
            direction_5 = 0

            for (i=0; i<list_of_results.length; i++) {
              train[i] = list_of_results[i];

                //First add direction name if not already there !
                if (direction_1 == 0 && train[i]["trDr"] == "1") {
                  var h5_1 = document.createElement("h5");
                  h5_1.appendChild(document.createTextNode(train[i]["stpDe"]));
                  destination_1_div.appendChild(h5_1);
                  direction_1 = 1;
                } else if (direction_5 == 0 && train[i]["trDr"] == "5") {
                  var h5_5 = document.createElement("h5");
                  h5_5.appendChild(document.createTextNode(train[i]["stpDe"]));
                  destination_5_div.appendChild(h5_5);
                  direction_5 = 1;
                }

                //Then compute the result
                var pattern = /(\d{4})(\d{2})(\d{2})/;
                arrival_time = train[i]["arrT"].replace(" ","T").replace(pattern,'$1-$2-$3');
                departure_time = train[i]["prdt"].replace(" ","T").replace(pattern,'$1-$2-$3');

                number_of_seconds = new Date(arrival_time) - new Date(departure_time);
                number_of_minutes = number_of_seconds / (60*1000);

                console.log("minutes:" + number_of_minutes);
                console.log("arrival time:" + new Date(arrival_time));
                console.log("search time:" + new Date(departure_time));

                train_nb = "train #" + train[i]["rn"] + " - ";
                time_to_train = number_of_minutes + " minutes";
                h6[i] = document.createElement("h6");
                span[i] = document.createElement("span");

                h6[i].appendChild(document.createTextNode(train_nb));
                h6[i].setAttribute("class","train_results");

                span[i].appendChild(document.createTextNode(time_to_train));
                span[i].setAttribute("class","time_result");

                h6[i].appendChild(span[i]);

                //Then add the result to the DOM
                if (train[i]["trDr"] == "1") {
                  destination_1_div.appendChild(h6[i]);
                } else if (train[i]["trDr"] == "5"){
                  destination_5_div.appendChild(h6[i]);
                }
            }
          }
        });
      }
</script>
